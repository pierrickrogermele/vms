# -*- mode: ruby -*-
# vi: ft=ruby sw=0 ts=2 et fdm=marker

load 'common.rb'

# Main {{{1
################################################################

Vagrant.configure(2) do |config|
  
  config.vm.box = "alpine/alpine64"
  name_vm_from_vagrantfile_name(config)
  
  # Set virtualbox parameters
  config.vm.provider :virtualbox do |vb|
    vb.memory = "1024"
    vb.gui = false
  end
  
  # Install Docker CE, see https://docs.docker.com/install/linux/docker-ce/debian/
#  config.vm.provision "Install needed packages for Docker-CE.", type: "shell", privileged: true, inline: "apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common"
#  config.vm.provision "Add repos key for Docker-CE", type: "shell", privileged: true, inline: "curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -"
#  config.vm.provision "Add Docker-CE repository.", type: "shell", privileged: true, inline: "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\""
#  config.vm.provision "Update the package index files.", type: "shell", privileged: true, inline: "apt-get update"
#  config.vm.provision "Install Docker-CE.", type: "shell", privileged: true, inline: "apt-get install -y docker-ce"
#  config.vm.provision "Add user to docker group.", type: "shell", privileged: true, inline: "usermod -aG docker vagrant"
# 
#  # Reload VM, see https://github.com/aidanns/vagrant-reload/blob/master/README.md. Install vagrant-reload plugin with "vagrant plugin install vagrant-reload".
#  config.vm.provision "Reload VM in order to enable new group \"docker\" for user.", type: "reload"
  
  # Install various packages
  config.vm.provision "Update the package index files.", type: "shell", privileged: true, inline: "apk update"
  config.vm.provision "Upgrade installed packages.", type: "shell", privileged: true, inline: "apk upgrade"
  config.vm.provision "Install Git.", type: "shell", privileged: true, inline: "apk add git"
  config.vm.provision "Install Make.", type: "shell", privileged: true, inline: "apk add make"
  config.vm.provision "Install Screen.", type: "shell", privileged: true, inline: "apk add screen"
  config.vm.provision "Install Vim.", type: "shell", privileged: true, inline: "apk add vim"
  config.vm.provision "Install Man.", type: "shell", privileged: true, inline: "apk add man man-pages"
  config.vm.provision "Install Less.", type: "shell", privileged: true, inline: "apk add less" # To have colors working fine with git, since git uses less for outputing to terminal. Busybox's less does not have the -R option.
  
  # Install personnal configuration
  config.vm.provision "Create dev folder.", type: "shell", privileged: false, inline: "mkdir -p dev"
  config.vm.provision "Clone public configuration.", type: "shell", privileged: false, inline: "cd dev && git clone --recursive https://github.com/pkrog/public-config"
  config.vm.provision "Install public configuration.", type: "shell", privileged: false, inline: "cd dev/public-config && make install"
  config.vm.provision "Clone public notes.", type: "shell", privileged: false, inline: "cd dev && git clone https://github.com/pkrog/public-notes"
  
  config.vm.provision "Install Python3 isatools library.", type: "shell", privileged: true, path: "install-isatools.sh"
 
#  # Install bionconda recipes and testing environment, see https://bioconda.github.io/contribute-a-recipe.html#test-locally
#  config.vm.provision "Clone bioconda recipes.", type: "shell", privileged: false, inline: "cd dev && git clone https://github.com/bioconda/bioconda-recipes"
#  config.vm.provision "Install Circle-CI.", type: "shell", privileged: true, inline: "wget -O /usr/local/bin/circleci https://circle-downloads.s3.amazonaws.com/releases/build_agent_wrapper/circleci && chmod a+rx /usr/local/bin/circleci"
#  config.vm.provision "Download bioconda Docker for local circleci testing.", type: "shell", privileged: false, inline: "docker pull bioconda/bioconda-utils-build-env"
#  config.vm.provision "Create tmp folder.", type: "shell", privileged: false, inline: "mkdir -p tmp"
#  config.vm.provision "Install miniconda for bioconda recipes local mulled-build tests.", type: "shell", privileged: false, inline: "cd dev/bioconda-recipes && ./bootstrap.py $HOME/tmp/miniconda"

end
